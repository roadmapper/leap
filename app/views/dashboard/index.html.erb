<div class="container theme-showcase">
	<div id="content" class="bs-docs-header">
		<div class="container marketing">
			<br>
			<div class="row">
				<div class="col-md-2">
					<%= image_tag "logo.png", class: "img-responsive" %>
				</div>
				<div class="form-inline">
					<h1>Data Management and Visualization System</h1>
					<%= form_tag dashboard_property_report_path, #class: "form-inline",
					 :method => "get" do %>
					<%= label_tag(:owner,"", class: "lead") %>
					<%= text_field_tag :owner, params[:owner], class: "typeahead", size: 100, placeholder: "Search Properties" %>
					<%= submit_tag("Search", class: 'btn btn-primary') %>
					<% end %>
		    			</p>
				</div>
			</div>
		</div>
	</div>
</div>

    
<%= javascript_tag "var variables = #{ @variables.to_json };" %>    

<script>

$('.typeahead').typeahead({
    name: 'properties',
    local: variables
 });
</script>

	<div class="container marketing" > 
		<div class="row">
			<div class="col-lg-4">
				<h2>Upload</h2>
				<p>Upload housing, utility, and customer data by searching for the CSV file you would like to add to the system and uploading it.  This page also shows you the file name, time of upload, and status of all files the system has processed.  The most recent files appear at the top of the list. </p>
				<p>
					<%= button_to "View", uploads_path, :method => "get", type: 'button', class: 'btn btn-default' %>
				</p>
			</div>
			<div class="col-lg-4">
				<h2>Analyze</h2>
				<p>View the properties that have enough data to be analyzed.  Search based on an installed measures checklist.  Results will show all properties with the selected conditions and the utility reports for each property.</p>
				<p>
					<%= button_to "View", analysis_path, :method => "get", type: 'button', class: 'btn btn-default' %>
				</p>
			</div>
			<div class="col-lg-4">
				<h2>Request Data</h2>
				<p>Select to generate reports for missing data based on utility type.  The report can either be generated in HTML form or as a CSV. </p>
				<p>
					<%= button_to "View", requests_path, :method => "get", type: 'button', class: 'btn btn-default' %>
				</p>
			</div>
		</div>
		<div class="row">
			<div class="col-lg-4">
				<h2>Filter</h2>
				<p>Complete advanced searches here.  This allows you to filter data based on the utility type and the TO date range.</p>
				<p>
					<%= button_to "View", filtering_path, :method => "get", type: 'button', class: 'btn btn-default' %>
				</p>
			</div>
			<div class="col-lg-4">
				<h2>Add Property</h2>
				<p>Add a new property to the system.  This page allows the input of property information such as customer name, address, and TO date.</p>
				<p>
					<%= button_to "View", new_property_path, :method => "get", type: 'button', class: 'btn btn-default' %>
				</p>
			</div>
			<div class="col-lg-4">
				<h2>Help</h2>
				<p>This system was created by the University of Virginia's Standard Learning Practicum in the Computer Science Department.  Jon Proffitt has the user manual and contact information of the developers.</p>
			</div>
		</div>
	</div>
	<br>
	<hr class="divider">
	<p class="text-right">
      		Â© SLP LEAP 2014
    	</p>
</div>	
