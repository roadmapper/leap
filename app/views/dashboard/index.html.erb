<%= stylesheet_link_tag "dashboard_style" %>
<div class="container theme-showcase">
	<div id="content" class="bs-docs-header">
		<div class="container marketing">
			<br>
			<div class="row">
				<div class="col-md-2">
					<%= image_tag "logo.png", class: "img-responsive" %>
				</div>
				<div class="form-inline" role= "form">
					
					<h1>Data Management and Visualization System</h1>
					<%= form_tag dashboard_property_report_path, #class: "form-control",
					 :method => "get" do %>
					<%= label_tag(:owner,"", class: "lead") %>
					<div id ="bloodhound1">
					<%= text_field_tag :owner, params[:owner], class: "typeahead form-control", size: 90, placeholder: "Search Properties" %>
					<button id= "search" type="submit" class="btn btn-primary">Search</button> 
					<% end %>
					</div>
		    			</p>
				</div>
			</div>
		</div>
	</div>
</div>
	
<script> 
var variables = new Bloodhound({
	datumTokenizer: Bloodhound.tokenizers.obj.whitespace('value'),
	queryTokenizer: Bloodhound.tokenizers.whitespace,
	limit: 8,
//	local: $.map(variables, function(variable) { return { value: variable }; })
 prefetch: {
	// url points to a json file that contains an array of country names, see
	// https://github.com/twitter/typeahead.js/blob/gh-pages/data/countries.json
	url: 'properties.json',
	// the json file contains an array of strings, but the Bloodhound
	// suggestion engine expects JavaScript objects so this converts all of
	// those strings
	filter: function(list) {
		return $.map(list, function(variable) { return { value: variable }; });
		}
	}
});

variables.initialize();
//here's my hacky fix bloodhound1
$('#bloodhound1 .typeahead').typeahead({
	hint: true,
	highlight: true,
	minLength: 1
	},
	{
	name: 'variables',
	displayKey: 'value',
	source: variables.ttAdapter()
});
</script>

	<div class="container marketing" > 
		<div class="row">
			<div class="col-lg-4">
				<h2>Upload</h2>
				<p>Upload housing, utility, and customer data by searching for the CSV file you would like to add to the system and uploading it.  This page also shows you the file name, time of upload, and status of all files the system has processed.  The most recent files appear at the top of the list. </p>
				<p>
					<%= button_to "View", uploads_path, :method => "get", type: 'button', class: 'btn btn-default' %>
				</p>
			</div>
			<div class="col-lg-4">
				<h2>Analyze</h2>
				<p>View the properties that have enough data to be analyzed.  Search based on Dominion Virginia Power, Charlottesville Gas, Washington Gas, and Null Accounts.  Results will show all properties with the selected conditions.  The owner name for each property can be clicked on, and all information associated with that property will be displayed.  Results can be exported to a CSV file in a PRISM ready format.</p>
				<p>
					<%= button_to "View", analysis_path, :method => "get", type: 'button', class: 'btn btn-default' %>
				</p>
			</div>
			<div class="col-lg-4">
				<h2>Measures</h2>
				<p>This page displays the complete list of possible installed measures.  Items can be added, deleted, or edited in this list.  Installed maesures can also be assocated with specific properties by entering the correct property id and measure.  A comments field is also available for entering information such as contractor data.</p>
				<p>
					<%= button_to "View", new_property_path, :method => "get", type: 'button', class: 'btn btn-default' %>
				</p>
			</div>
		</div>
		<div class="row">
			<div class="col-lg-4">
				<h2>Filter</h2>
				<p>Complete advanced searches here.  This allows the filtering of data based on utility type, installed measures, and the TO date range.</p>
				<p>
					<%= button_to "View", filtering_path, :method => "get", type: 'button', class: 'btn btn-default' %>
				</p>
			</div>
			<div class="col-lg-4">
				<h2>Properties</h2>
				<p>Add a new property to the system here by entering property information such as customer name, address, and TO date.  The complete list of all LEAP properties is displayed here.  Each name in the properties list is clickable and will redirect to the entire data-set available for that specific property.</p>
				<p>
					<%= button_to "View", new_property_path, :method => "get", type: 'button', class: 'btn btn-default' %>
				</p>
			</div>
			<div class="col-lg-4">
				<h2>Request Data</h2>
				<p>Select to generate reports for missing data based on utility type.  The report can either be generated in HTML form or as a CSV in a PRISM ready format. </p>
				<p>
					<%= button_to "View", requests_path, :method => "get", type: 'button', class: 'btn btn-default' %>
				</p>
			</div>
		</div>
		<div class="row">
			<div class="col-lg-4">
				<h2>Help</h2>
				<p>This system was created by the University of Virginia's Service Learning Practicum in the Computer Science Department.  Jon Proffitt has the user manual and contact information of the developers.</p>
			</div>
		</div>
	</div>
	<br>
	<hr class="divider">
	<p class="text-right">
      		Â© SLP LEAP 2014
    	</p>
</div>	
